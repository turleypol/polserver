use os;
use uo;
include "testutil";

var testrun:=CInt(GetEnvironmentVariable("POLCORE_TEST_RUN"));

program test_char()
  return 1;
endprogram

// save/load test for things in Character class
exported function load_save_character()
  var props:={
//               {"Account", {"",1}},
//               {"CharIdx", {"",1}},
//              {"CmdLevel", {"",1}},
             {"Concealed", {"concealed",1}},
//             {"TrueColor", {"",1}},
//           {"TrueObjtype", {"",1}},
//       {"RegisteredHouse", {"",1}},
//                {"Gender", {"",1}},
//                  {"Race", {"",1}},
//                  {"Dead", {"",1}},
//          {"MountedSteps", {"",1}},
                {"Hidden", {"hidden",1}},
                {"Frozen", {"frozen",1}},
//       {"MovementWalkMod", {"",1}},
//        {"MovementRunMod", {"",1}},
//{"MovementWalkMountedMod", {"",1}},
// {"MovementRunMountedMod", {"",1}},
//   {"CarryingCapacityMod", {"",1}},
//           {"pAttr->name", {"",1}},
//          {"pVital->name", {"",1}},
//               {"Statcap", {"",1}},
//              {"Skillcap", {"",1}},
//          {"FollowersMax", {"",1}},
//             {"Followers", {"",1}},
//               {"Tithing", {"",1}},
//              {"MoveMode", {"",1}},
//                 {"Privs", {"",1}},
//              {"Settings", {"",1}},
//             {"CreatedAt", {"",1}},
//        {"SquelchedUntil", {"",1}},
//         {"DeafenedUntil", {"",1}},
//           {"TitlePrefix", {"",1}},
//           {"TitleSuffix", {"",1}},
//            {"TitleGuild", {"",1}},
//             {"TitleRace", {"",1}},
              {"Murderer", {"murderer",1}}
//          {"PartyCanLoot", {"",1}},
//            {"Reportable", {"",1}},
//            {"LastCorpse", {"",1}},
  };

  if (testrun == 1)
    var chr:=createAccountWithChar("restart_test_char", "pass");
    if (!chr)
      return chr;
    endif
    foreach prop in props
      chr.set_member(prop[2][1],prop[2][2]);
    endforeach
  else

    var a:=FindAccount("test");
    if (!a)
      return ret_error("failed to find account");
    endif
    var chr:=a.getcharacter(1);
    if (!chr)
      return ret_error("failed to find char");
    endif
    foreach prop in props
      var val:=chr.get_member(prop[2][1]);
      if (val != prop[2][2])
        return ret_error($"Member {prop[2][1]} {prop[2][2]} != {val}");
      endif
    endforeach
  endif
  return 1;
endfunction
