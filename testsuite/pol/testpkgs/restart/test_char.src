use os;
use uo;
include "testutil";

var testrun:=CInt(GetEnvironmentVariable("POLCORE_TEST_RUN"));

program test_char()
  return 1;
endprogram

// save/load test for things in Character class
exported function load_save_character()
  var props:={
//               {"Account", {"",1}},
//               {"CharIdx", {"",1}},
//              {"CmdLevel", {"",1}},
             {"Concealed", {"concealed",1}},
//             {"TrueColor", {"",1}},
//           {"TrueObjtype", {"",1}},
//       {"RegisteredHouse", {"",1}},
                {"Gender", {"gender",1}},
                  {"Race", {"race",RACE_GARGOYLE}},
//                  {"Dead", {"",1}},
          {"MountedSteps", {"mountedsteps",7}},
                {"Hidden", {"hidden",1}},
                {"Frozen", {"frozen",1}},
       {"MovementWalkMod", {"movecost_walk_mod",8.1}},
        {"MovementRunMod", {"movecost_run_mod",8.2}},
{"MovementWalkMountedMod", {"movecost_walk_mounted_mod",8.3}},
 {"MovementRunMountedMod", {"movecost_run_mounted_mod",8.4}},
   {"CarryingCapacityMod", {"carrying_capacity_mod",8.5}},
//           {"pAttr->name", {"",1}},
//          {"pVital->name", {"",1}},
               {"Statcap", {"statcap",256}},
              {"Skillcap", {"skillcap",701}},
             {"Followers", {"followers",9}},
          {"FollowersMax", {"followers_max",10}},
               {"Tithing", {"tithing",11}},
//              {"MoveMode", {"",1}},
//                 {"Privs", {"",1}},
//              {"Settings", {"",1}},
//             {"CreatedAt", {"",1}},
//        {"SquelchedUntil", {"",1}},
//         {"DeafenedUntil", {"",1}},
           {"TitlePrefix", {"title_prefix","myprefix"}},
           {"TitleSuffix", {"title_suffix","mysuffix"}},
            {"TitleGuild", {"title_guild","myguild"}},
             {"TitleRace", {"title_race","myrace"}},
              {"Murderer", {"murderer",1}}
//          {"PartyCanLoot", {"",1}},
//            {"Reportable", {"",1}},
//            {"LastCorpse", {"",1}},
  };

  if (testrun == 1)
    var chr:=createAccountWithChar("restart_test_char", "pass");
    if (!chr)
      return chr;
    endif
    foreach prop in props
      chr.set_member(prop[2][1],prop[2][2]);
    endforeach
  else

    var a:=FindAccount("restart_test_char");
    if (!a)
      return ret_error("failed to find account");
    endif
    var chr:=a.getcharacter(1);
    if (!chr)
      return ret_error("failed to find char");
    endif
    foreach prop in props
      var val:=chr.get_member(prop[2][1]);
      if (val != prop[2][2])
        return ret_error($"Member {prop[2][1]} {prop[2][2]} != {val}");
      endif
    endforeach
  endif
  return 1;
endfunction
