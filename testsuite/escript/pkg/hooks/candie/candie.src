//////////////////////////////////////////////////////////////////////////////////////////
//
//  CanDie( mobile )
//
//  Description:    Used to determine when, and if, a mobile can die. Especially
//                  useful for taking some action before allowing the mobile to die.
//
//  Parameters:     mobile::mobile ref
//
//  Return Value: 0 - mobile can die, 1 - mobile cannot die.
//
//  Created: 2022-08-07 15:39:58 by Yukiko
//
//////////////////////////////////////////////////////////////////////////////////////////

use uo;

include ":insurance:insurance";
include ":attributes:attributes";

program CanDie()
  // 0: deactivate hook
  // 1: activate hook
  return 1;
endprogram

exported function CanDie( mobile )

  //////////////////////////////////////////////////////////////
  //                                                          //
  //  This block of code should be run ONLY when a mobile is  //
  //  supposed to die. When adding more functionality to this //
  //  hook be sure to take that into consideration.           //
  //                                                          //
  //////////////////////////////////////////////////////////////
  // For players with insured items, this block of code sums up the insurance cost for all insured items
  // and saves that total in a CProp, InsuredTotalCost, on the player. This CProp is used by chrDeath.src to
  // determine how much gold to pey the killer.
  var last_damage := GetObjProperty( mobile, "LastDamage" );
  // Insurance rewards are only payed to player killers, not to NPCs.
  var killer := SystemFindObjectBySerial( last_damage.serial );
  if ( killer.client.ip )
    var things := ListEquippedItems( mobile )
                 + EnumerateItemsInContainer( mobile.backpack,
                                              ENUMERATE_ROOT_ONLY );
    var insurance_cost := 0;
    var reinsure_items := {};
    foreach thing in things
      if ( thing.insured )
        // Add up the reward for the killer.
        insurance_cost += CalculateInsCost( thing );
        // Re-insure items if player is set for auto re-insure.
        if ( GetObjProperty( mobile, "AutoRenewInsurance" ) )
          reinsure_items.append( thing.serial );
        endif
      endif
    endforeach
    SetObjProperty( mobile, "InsuredTotalCost", insurance_cost );
    SetObjProperty( mobile, "ReinsureItems", reinsure_items );
  endif
  //////////////////-End insurance processing-//////////////////
  // Let the mobile die.
  return 1;

endfunction
