use uo;
use os;
use datafile;

include ":datafile:datafile";
include "include/sorting";
include "include/client";
include "include/bounty";
include ":gumps:gumps";

var loop := 1;

program board( who ) // (who, board) <-- 'board' wasn't used
  while ( loop == 1 )
    GenerateBoard( who );
  endwhile
endprogram

function generateBoard( byref who )
  var b_gump := GFCreateGump();
  GFPage( b_gump, 0 );
  GFGumpPic( b_gump, 0, 0, 2170 );
  GFTextLine( 197, 38, 0, "Bounty Board" );
  GFTextLine( 200, 40, COLOR_YELLOW, "Bounty Board" );
  var data := ComposeBountyBoard();
  data.reverse();
  var count := 0, page := 2, ct := 0;
  var ymod := 160;
  GFPage( b_gump, 1 );
  GFTextLine( 130, 345, 0, "Page: 1" );
  foreach thing in data
    if ( ct >= 10 )
      ct := 0;
      GFAddButton( b_gump, 354, 319, 2085, 2085, GF_PAGE_BTN, page );
      GFPage( b_gump, page );
      GFTextLine( 130, 345, 0, "Page: " + page );
      GFAddButton( b_gump, 355, 144, 2084, 2084, GF_PAGE_BTN, page - 1 );
      ymod := 160;
      page := page + 1;
    endif
    if ( count >= 50 )
      break;
    else
      GFAddButton( b_gump, 110, ymod + 3, 0x1523, 0x1523, GF_CLOSE_BTN, 0 );
      GFTextLine( 130, ymod, 0, thing[1] + ":   " + thing[3] + " gold" );
      count := count + 1;
      ct := ct + 1;
      ymod := ymod + 16;
    endif
  endforeach
  var ret := GFSendGump( who, b_gump );
  if ( ret[0] )
    loop := 1;
    ComposeDetailPage( who, ret[0] );
  else
    loop := 0;
    return;
  endif
endfunction

function ComposeDetailPage( byref who, serial )
  var b_gump := GFCreateGump();
  GFPage( b_gump, 0 );
  GFGumpPic( b_gump, 83, 63, 0x820 );
  GFGumpPic( b_gump, 100, 100, 0x821 );
  GFGumpPic( b_gump, 100, 170, 0x822 );
  GFGumpPic( b_gump, 100, 240, 0x821 );
  GFGumpPic( b_gump, 100, 310, 0x822 );
  GFGumpPic( b_gump, 100, 380, 0x823 );
  GFGumpPic( b_gump, 120, 100, 0x82b );
  GFGumpPic( b_gump, 120, 365, 0x82b );
  GFGumpPic( b_gump, 120, 170, 0x39 );
  GFGumpPic( b_gump, 150, 170, 0x3a );
  GFGumpPic( b_gump, 165, 170, 0x3a );
  GFGumpPic( b_gump, 180, 170, 0x3a );
  GFGumpPic( b_gump, 195, 170, 0x3a );
  GFGumpPic( b_gump, 210, 170, 0x3a );
  GFGumpPic( b_gump, 225, 170, 0x3a );
  GFGumpPic( b_gump, 240, 170, 0x3a );
  GFGumpPic( b_gump, 255, 170, 0x3a );
  GFGumpPic( b_gump, 270, 170, 0x3a );
  GFGumpPic( b_gump, 285, 170, 0x3a );
  GFGumpPic( b_gump, 300, 170, 0x3b );
  var elem := DFFindElement( bountyfile, Cstr( serial ) );
  var name := DFGetProp( elem, "Name" );
  var murder := DFGetProp( elem, "Murders" );
  var bounty := DFGetProp( elem, "Bounty" );
  GFTextLine( 110, 110, 0, "Name:    " + name );
  GFTextLine( 110, 130, 0, "Murders: " + murder );
  GFTextLine( 110, 150, 0, "Bounty:  " + bounty );
  GFTextLine( 110, 190, 0, "The foul scum known as" );
  GFTextLine( 110, 210, 0, name + " cannot continue" );
  GFTextLine( 110, 230, 0, "to kill! For he is responsible" );
  if ( murder == 1 )
    GFTextLine( 110, 250, 0, "for 1 murder. Lord British's" );
  else
    GFTextLine( 110, 250, 0, "for " + murder + " murders. Lord British's" );
  endif
  GFTextLine( 110, 270, 0, "bounty of " + bounty + " gold pieces" );
  GFTextLine( 110, 290, 0, "will be rewarded to the first" );
  GFTextLine( 110, 310, 0, "citizen to bring his head to" );
  GFTextLine( 110, 330, 0, "any of the city guards." );
  GFSendGump( who, b_gump );
endfunction
