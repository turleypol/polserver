use uo;
use os;
use vitals;

include "include/housing";
include ":staticHousing:settings";

var settings := SH_GetSettingsCfgElem( "Settings" );

program StaticHouseDestruction( sgn )
  sign := sgn;
  SetObjProperty( sign, "lastownername", GetObjProperty( sign, "ownername" ) );
  SetObjProperty( sign, "lastownerserial",
                  GetObjProperty( sign, "ownerserial" ) );

  footage := GetObjProperty( sign, "footage" );
  var itemlist := sign.GetItemsInHouse();
  var chk;
  chk := chk;
  var stone;
  var totalvalueofhouses := 0;
  var hv := 0;
  // Determine if we have a "house values count" setting.
  // If we do calculate the value of the current house and remove it from the approprite object.
  var accnt := FindAccount( GetObjProperty( sign, "owneraccount" ) );
  var ownrserial := CInt( GetObjProperty( sign, "ownerserial" ) );
  var who := SystemFindObjectBySerial( ownrserial );
  if ( CInt( settings.HouseValuesCount ) )
    hv := DetermineHouseValue( CInt( GetObjProperty( sign, "Price" ) ) );
    if ( settings.HouseValueAppliedTo == "Character" )
      totalvalueofhouses := CInt( GetObjProperty( who, "TotalValueOfHouses" ) )
                                  - hv;
      SetObjProperty( who, "TotalValueOfHouses", totalvalueofhouses );
    elseif ( settings.HouseValueAppliedTo == "Account" )
      totalvalueofhouses := CInt( GetObjProperty( accnt, "TotalValueOfHouses" )
                                  ) - hv;
      SetObjProperty( accnt, "TotalValueOfHouses", totalvalueofhouses );
    endif
  endif
  SetObjProperty( sign, "NewHouse", 1 );
  var builtdeed := SystemFindObjectBySerial( GetObjProperty( sign, "builtdeed" ) );
  DestroyItem( builtdeed );
  EraseObjProperty( sign, "builtdeed" );

  foreach thing in itemlist
    if ( GetObjProperty( thing, "houseserial" ) == sign.serial )
      if ( ( GetObjProperty( thing, "secure" ) ) && ( !thing.movable ) )
        EraseObjProperty( thing, "secure" );
        var oldscript := GetObjProperty( thing, "oldscript" );
        if ( oldscript == error )
          oldscript := "";
        endif
        thing.usescript := oldscript;
        thing.movable := 1;
        EraseObjProperty( thing, "houseserial" );
        EraseObjProperty( thing, "oldscript" );
      elseif ( ( GetObjProperty( thing, "lockeddown" ) ) && ( !thing.movable ) )
        thing.movable := 1;
        EraseObjProperty( thing, "houseserial" );
        EraseObjProperty( thing, "lockeddown" );
      elseif ( ( !thing.movable ) && ( !thing.isa( POLCLASS_DOOR ) ) &&
               ( !thing.IsStaticHouseSign() ) )
        if ( thing.objtype == 0x2a390 ) // GuildStone
          thing.movable := 1;
          MoveObjectToLocation( thing, sign.x, sign.y, sign.z,
                                MOVEOBJECT_FORCELOCATION );
          thing.movable := 0;
        endif
      endif
    endif
    sleepms( 5 );
  endforeach
  foreach thing in ( GetHouseMobiles( sign ) )
    if ( thing.npctemplate == "playervendor" )
      RevokePrivilege( thing, "invul" );
      ApplyRawDamage( thing, GetVital( thing, "Life" ) + 100 );
    endif
  endforeach
  foreach thing in GetObjProperty( sign, "bantiles" )
    var tile := SystemFindObjectBySerial( thing );
    DestroyItem( tile );
  endforeach
  foreach thing in GetObjProperty( sign, "components" )
    var obj := SystemFindObjectBySerial( thing );
    EraseObjProperty( thing, "LockID" );
    obj.locked := 0;
  endforeach
  if ( stone )
    stone.movable := 0;
    ReleaseItem( stone );
  endif
  return 1;
endprogram
