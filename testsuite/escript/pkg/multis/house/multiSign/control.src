
use uo;
use os;
use basic;
use cliloc;

include ":multihousing:multihouse_settings";
include "include/eventID";
include ":attributes:attributes";
include "include/sysEvent";
include "include/objtype";
include "include/housing";

program SignListener( sign )
  var house := GetObjProperty( sign, "houseserial" );
  if ( house )
    house := SystemFindObjectBySerial( house );
  endif
  if ( !house )
    return;
  endif
  RegisterForSpeechEvents( sign, 30 );
  var ownerser, who, ev, decaytime;
  while ( sign )
    ownerser := GetObjProperty( sign, "ownerserial" );
    ev := wait_for_event( 120 );
    if ( ev )
      who := ev.source;
      if ( who.multi.serial == house.serial )
        if ( who.serial == ownerser )
          handle_speech( ev, house, sign, 3 );
        else
          if ( sign.IsInHouseLists( who, 1 ) == 1 )
            handle_speech( ev, house, sign, 2 );
          elseif ( sign.IsInHouseLists( who, 2 ) == 1 )
            handle_speech( ev, house, sign, 1 );
          endif
        endif
      endif
    endif
    decaytime := GetObjProperty( sign, "decay" );
    if ( decaytime.errortext )
      decaytime := ( ReadGameClock() + get_abandon_time() );
      SetObjProperty( sign, "decay", decaytime );
    endif
    if ( !GetObjProperty( sign, "nodecay" ) )
      var tname;
      var newname := GetObjProperty( sign, "signname" );
      if ( !newname )
        newname := "a house";
        SetObjProperty( sign, "signname", newname );
      endif
      if ( ReadGameClock() > decaytime )
        demolish( house );
      elseif ( ( decaytime - ReadGameClock() ) > 861000 )
        tname := newname + ", [this house is like new]";
        SetName( sign, tname );
      elseif ( ( decaytime - ReadGameClock() ) > 604800 )
        tname := newname + ", [this house is slightly worn]";
        SetName( sign, tname );
      elseif ( ( decaytime - ReadGameClock() ) > 259200 )
        tname := newname + ", [this house is fairly worn]";
        SetName( sign, tname );
      elseif ( ( decaytime - ReadGameClock() ) > 86400 )
        tname := newname + ", [this house is greatly worn]";
        SetName( sign, tname );
      else
        tname := newname + ", [this house is in danger of collapsing]";
        SetName( sign, tname );
      endif
    endif
    cleareventque();
  endwhile
endprogram

function cleareventque()
  var ev;
  repeat
  until ( !( ev := os::wait_for_event( 0 ) ) );
endfunction

function handle_speech( event, house, sign, sec )
  var text := lower( event.text );
  if ( ( text["i wish to lock this down"] ) && ( sec >= 2 ) )
    HouseFunction( sign, event, 1 );
  elseif ( ( text["i wish to release this"] ) && ( sec >= 2 ) )
    HouseFunction( sign, event, 2 );
  elseif ( ( text["i wish to secure this"] ) && ( sec >= 2 ) )
    secure( sign, event );
  elseif ( ( text["i wish to unsecure this"] ) && ( sec >= 2 ) )
    unsecure( sign, event );
  elseif ( ( text["remove thyself"] ) && ( sec >= 1 ) )
    remove( house, sign, event );
  elseif ( ( text["i ban thee"] ) && ( sec >= 1 ) )
    Print( "going to house banning." );
    housebanning( house, event, sign );
  elseif ( ( text["i wish to place a trash barrel"] ) && ( sec >= 2 ) )
    trashbarrel( house, event );
  elseif ( text["reveal thyself"] )
    reveal( sign, event );
  endif
endfunction

function remove( house, sign, event )
  var who := event.source;
  if ( who.multi.serial == house.serial )
    SendSysMessageCL( who, 501326, color := 88 ); // Target the individual to eject from this house.
    var idiot := Target( who, TGTOPT_NOCHECK_LOS );
    if ( !idiot )
      SendSysMessageCL( who, 1042023, color := 33 ); // Cancelled.
      return;
    elseif ( AP_GetVital( idiot, VITALID_MANA ) == error )
      SendSysMessageCL( who, 501347, color := 33 ); // You cannot eject that from the house!
      return;
    endif
    if ( sign.IsObjectInsideHouse( idiot ) )
      var friend := sign.IsInHouseLists( idiot, 2 );
      var coown := sign.IsInHouseLists( idiot, 1 );
      var staff := who.cmdlevel;
      if ( ( coown == 0 ) && ( friend == 0 ) && ( idiot.serial != who.serial ) &&
           ( staff < 2 ) )
        MoveObjectToLocation( idiot, sign.x, sign.y, sign.z, sign.realm,
                              MOVEOBJECT_FORCELOCATION );
        SendSysMessageCL( idiot, 501341, color := 33 ); // You have been ejected from this house. If you persist in entering, you may be banned from the house.
        return;
      elseif ( ( friend == 1 ) || ( coown == 1 ) ||
               ( idiot.serial == GetObjProperty( sign, "ownerserial" ) ) )
        SendSysMessageCL( who, 501348, color := 33 ); // You cannot eject a friend of the house!
        return;
      elseif ( idiot.serial == who.serial )
        SendSysMessageCL( who, 501350, color := 33 ); // You cannot eject this person!
        return;
      else
        SendSysMessageCL( who, 1005213, color := 33 ); // You can't do that
      endif
    else
      SendSysMessageCL( who, 501352, color := 33 ); // You may not eject someone who is not in your house!
      return;
    endif
  else
    SendSysMessage( who, "you must be in a house to do this" );
    return;
  endif
endfunction

// trashbarrels are not yet implemented using house commands.
function trashbarrel( house, event )
  var who := event.source;
  var barrelcheck := GetObjProperty( house, "barrelserial" );
  if ( barrelcheck )
    var exists := 0;
    foreach thing in ( house.items )
      if ( thing.serial == barrelcheck )
        exists := 1;
        break;
      endif
    endforeach
    if ( exists == 1 )
      SendSysMessage( who, "This house already has a trash barrel" );
      return;
    endif
  endif
  var items := ListItemsNearLocation( who.x, who.y, who.z, 1 );
  var check := 0;
  foreach thing in items
    if ( thing.objtype == 0x18889 )
      check := 1;
    endif
  endforeach
  if ( check == 0 )
    var barrel := CreateItemAtLocation( who.x, who.y, who.z, 0x17009, 1 );
    if ( barrel )
      SetObjProperty( house, "barrelserial", barrel.serial );
      SetObjProperty( barrel, "houseserial", house.serial );
    endif
  else
    SendSysMessage( who, "You cannot place that here." );
  endif
endfunction

function HouseFunction( house, event, num )
  var itemt := Target( event.source, TGTOPT_NOCHECK_LOS );
  if ( !itemt )
    SendSysMessageCL( event.source, 1042023, color := 33 ); // Cancelled.
    return;
  endif
  var house_sign := SystemFindObjectBySerial( GetObjProperty( house,
                                                              "signserial" ) );
  // Set-up in case this item is a deeded item.
  var DeedObjType := GetObjProperty( itemt, "DeedObjType" );
  var DeedColor := GetObjProperty( itemt, "DeedColor" );
  var OtherItems := array;
  OtherItems := GetObjProperty( itemt, "OtherItems" );
  //////////////////////////////////////////////

  var lists := GetObjProperty( house_sign, "footage" );
  var itemlist := {};
  var holder;
  foreach thing in lists
    holder := ListObjectsInBox( thing[1], thing[2], thing[3], thing[4], thing[5],
                                thing[6], house.realm );
    foreach thing in holder
      itemlist.append( thing );
    endforeach
  endforeach
  if ( itemt in itemlist )
    case ( num )
      1:
        if ( GetObjProperty( house_sign, "RemainingLockdowns" ) > 0 )
          if ( itemt.movable == 1 )
            itemt.movable := 0;
            SetObjProperty( itemt, "lockeddown", 1 );
            SetObjProperty( itemt, "houseserial", house.serial );
            SetObjProperty( house_sign, "RemainingLockdowns",
                            GetObjProperty( house_sign, "RemainingLockdowns" )
                          - 1 );
            SendSysMessageCL( event.source, 501721, color := 66 ); // Locked down!
          elseif ( ( itemt.movable == 0 ) &&
                   ( GetObjProperty( itemt, "lockeddown" ) == 1 ) )
            SendSysMessageCL( event.source, 501719, color := 33 ); // This is already locked down!
            return;
          elseif ( ( itemt.movable == 0 ) && ( GetObjProperty( itemt, "secure" ) == 1 ) )
            SendSysMessageCL( event.source, 501714, color := 33 ); // This is already secure!
            return;
          else
            SendSysMessageCL( event.source, 1010414, color := 33 ); // You cannot lock this down.
            return;
          endif
        else
          SendSysMessageCL( event.source, 1005379, color := 33 ); // This action would exceed the lockdown limit of this house.
        endif
      2:
        if ( GetObjProperty( itemt, "lockeddown" ) && ( itemt.movable == 0 ) )
          // This must remain first in the list for deeded items.
          if ( DeedObjType )
            itemt := CreateItemInBackpack( event.source, CInt( DeedObjType ) );
            if ( !itemt )
              SendSysMessageCL( event.source, 1045150, {}, 3, 33 ); // "There is not enough room in your backpack for the deed."
              return;
            endif
            itemt.color := CInt( DeedColor );
            foreach part in OtherItems
              itemt := SystemFindObjectBySerial( part );
              DestroyItem( itemt );
            endforeach
            house_sign.AddLockdown();
            return;
          endif
          /////////////////////////////////////////////////////
          if ( GetObjProperty( itemt, "secure" ) == 1 )
            EraseObjProperty( itemt, "secure" );
            var oldscript := GetObjProperty( itemt, "oldscript" );
            if ( oldscript == error )
              oldscript := "";
            endif
            itemt.usescript := oldscript;
            SetObjProperty( house_sign, "RemainingSecures",
                            GetObjProperty( house_sign, "RemainingSecures" )
                          + 1 );
            EraseObjProperty( itemt, "oldscript" );
            EraseObjProperty( itemt, "boxserial" );
          endif
          EraseObjProperty( itemt, "signserial" );
          itemt.movable := 1;
          EraseObjProperty( itemt, "lockeddown" );
          SetObjProperty( house_sign, "RemainingLockdowns",
                          GetObjProperty( house_sign, "RemainingLockdowns" )
                        + 1 );
          SendSysMessage( event.source, "Released." );
          return;
        elseif ( ( itemt.movable == 0 ) && ( GetObjProperty( itemt, "secure" ) == 1 ) )
          EraseObjProperty( itemt, "secure" );
          var oldscript := GetObjProperty( itemt, "oldscript" );
          if ( oldscript == error )
            oldscript := "";
          endif
          itemt.usescript := oldscript;
          SetObjProperty( house_sign, "RemainingSecures",
                          GetObjProperty( house_sign, "RemainingSecures" )
                        + 1 );
          EraseObjProperty( itemt, "signserial" );
          EraseObjProperty( itemt, "oldscript" );
          itemt.movable := 1;
          SendSysMessageCL( event.source, 501657, color := 33 ); // (no longer locked down)
          return;
        elseif ( itemt.movable == 1 )
          SendSysMessageCL( event.source, 1042271, color := 33 ); // That is not locked down.
          return;
        else
          SendSysMessageCL( event.source, "you cannot release that" );
          return;
        endif
    endcase
  else
    SendSysMessageCL( event.source, 1005525, color := 33 ); // That is not in your house.
  endif
endfunction

function secure( sign, event )
  var house := SystemFindObjectBySerial( GetObjProperty( sign, "houseserial" ) );
  SendSysMessageCL( event.source, 502103, color := 88 ); // Choose the item you wish to secure
  var itemt := Target( event.source );
  if ( !itemt )
    SendSysMessageCL( event.source, 1042023, color := 33 ); // Cancelled.
    return;
  endif
  if ( GetObjProperty( itemt, "secure" ) )
    SendSysMessageCL( event.source, 501714, color := 33 ); // This is already secure!
    return;
  elseif ( !itemt.isa( POLCLASS_CONTAINER ) )
    SendSysMessageCL( event.source, 501682, color := 33 ); // not a container
    return;
  endif
  if ( GetObjProperty( sign, "RemainingSecures" ) )
    var lists := GetObjProperty( sign, "footage" );
    var itemlist := {};
    var holder;
    foreach thing in lists
      holder := ListObjectsInBox( thing[1], thing[2], thing[3], thing[4],
                                  thing[5], thing[6], sign.realm );
      foreach thing in holder
        itemlist.append( thing );
      endforeach
    endforeach
    if ( itemt in itemlist )
      if ( itemt.movable == 0 )
        if ( GetObjProperty( itemt, "lockeddown" ) == 1 )
          SendSysMessage( event.source,
                          "securing this container. your house will be credited with one lockdown." );
          SetObjProperty( sign, "RemainingLockdowns",
                          GetObjProperty( sign, "RemainingLockdowns" ) + 1 );
          EraseObjProperty( itemt, "lockeddown" );
        else
          SendSysMessage( event.source, "you cannot secure that." );
          return;
        endif
      endif
      itemt.movable := 0;
      SetObjProperty( itemt, "boxserial", itemt.serial );
      SetObjProperty( itemt, "houseserial", house.serial );
      SetObjProperty( itemt, "secure", 1 );
      SetObjProperty( itemt, "oldscript", itemt.script );
      itemt.usescript := ":multihousing:secureCont";
      SetObjProperty( sign, "RemainingSecures",
                      GetObjProperty( sign, "RemainingSecures" ) - 1 );
      SendSysMessageCL( event.source, 1010563, color := 66 ); // This container is secure.
      SendSysMessage( event.source, "that item is not inside your house." );
    endif
  else
    SendSysMessageCL( event.source, 1061839, color := 33 ); // This action would exceed the secure storage limit of the house.
  endif
endfunction

function unsecure( sign, event )
  var house := SystemFindObjectBySerial( GetObjProperty( sign, "houseserial" ) );
  SendSysMessageCL( event.source, 502106, color := 88 ); // Choose the item you wish to unsecure
  var itemt := Target( event.source );
  if ( !itemt )
    SendSysMessageCL( event.source, 1042023, color := 33 ); // Cancelled.
    return;
  endif
  if ( !GetObjProperty( itemt, "secure" ) == 1 )
    SendSysMessage( event.source, "You cannot unsecure that.", color := 33 );
    return;
  endif
  EraseObjProperty( itemt, "secure" );
  if ( GetObjProperty( itemt, "houseserial" ) == house.serial )
    var lockdowns := GetObjProperty( sign, "RemainingLockdowns" );
    var oldscript := GetObjProperty( itemt, "oldscript" );
    if ( oldscript == error )
      oldscript := "";
    endif
    itemt.usescript := oldscript;
    SetObjProperty( sign, "RemainingSecures",
                    GetObjProperty( sign, "RemainingSecures" ) + 1 );
    EraseObjProperty( itemt, "signserial" );
    EraseObjProperty( itemt, "oldscript" );
    EraseObjProperty( itemt, "boxserial" );
    if ( lockdowns > 0 )
      SetObjProperty( itemt, "lockeddown", 1 );
      SetObjProperty( sign, "RemainingLockdowns", lockdowns - 1 );
      SendSysMessage( event.source,
                      "The container is locked down and your house has been credited one secure container.",
                      color := 66 );
    else
      itemt.movable := 1;
      SendSysMessage( event.source,
                      "The container is no longer locked down and your house has been credited one secure container."
                      );
    endif
  else
    SendSysMessageCL( event.source, 1005525, color := 33 ); // That is not in your house.
  endif
endfunction

function housebanning( house, event, sign )
  var who := event.source;
  var banlist := sign.GetBanList();
  if ( len( banlist ) >= 20 )
    SendSysMessageCL( event.source, 501355, color := 33 ); // The ban limit for this house has been reached!
    return;
  endif
  SendSysMessageCL( event.source, 502014, color := 88 ); // Select the victim.
  var idiot := Target( event.source );
  if ( !idiot )
    SendSysMessageCL( who, 1042023, color := 33 ); // Cancelled.
    return;
  endif
  if ( !AP_GetStat( idiot, STRENGTH ) )
    SendSysMessage( who, "That cannot be added to the list." );
    return;
  endif
  if ( ( sign.IsObjectInsideHouse( idiot ) ) || ( idiot.multi == house ) )
    var friend := sign.IsInHouseLists( idiot, 2 );
    var coown := sign.IsInHouseLists( idiot, 1 );
    var banned := sign.IsInHouseLists( idiot, 3 );
    var staff := idiot.cmdlevel;
    var act := idiot.acctname;
    var own := GetObjProperty( sign, "ownerserial" );
    if ( ( coown == 0 ) && ( banned == 0 ) && ( friend == 0 ) && ( act != own ) &&
         ( idiot.serial != who.serial ) && ( staff < 2 ) )
      SendSysMessageCL( idiot, 501340, color := 33 ); // You have been banned from this house.
      MoveObjectToLocation( idiot, sign.x, sign.y, sign.z, sign.realm );
      banlist.append( idiot.serial );
      SetObjProperty( sign, "banlist", banlist );
      SendSysMessage( event.source, idiot.name + " was banned from your house" );
      return;
    elseif ( ( friend == 1 ) || ( coown == 1 ) || ( act == own ) )
      SendSysMessage( who, "you cannot ban friends" );
      return;
    elseif ( banned == 1 )
      SendSysMessageCL( who, 501356, color := 33 ); // This person is already banned!
      MoveObjectToLocation( idiot, sign.x, sign.y, sign.z, sign.realm,
                            MOVEOBJECT_FORCELOCATION );
      return;
    else
      SendSysMessageCL( who, 1062040, color := 33 ); // You cannot ban that.
      return;
    endif
  else
    SendSysMessageCL( event.source, 1062040, color := 33 ); // You cannot ban that.
    return;
  endif
endfunction

function demolish( sign )
  var house := SystemFindObjectBySerial( GetObjProperty( sign, "houseserial" ) );
  var lists := GetObjProperty( sign, "footage" );
  var itemlist := {};
  foreach entry in lists
    foreach thing in ListObjectsInBox( entry[1], entry[2], entry[3], entry[4],
                                       entry[5], entry[6], house.realm )
      itemlist.append( thing );
    endforeach
  endforeach
  var builtdeed := GetObjProperty( house, "builtdeed" );
  if ( builtdeed )
    if ( !DestroyItem( SystemFindObjectBySerial( builtdeed ) ) )
      DestroyItem( SystemFindObjectBySerial( builtdeed, 1 ) );
    endif
  endif
  foreach thing in itemlist
    if ( GetObjProperty( thing, "houseserial" ) == house.serial )
      if ( ( GetObjProperty( thing, "secure" ) == 1 ) && ( thing.movable == 0 ) )
        EraseObjProperty( thing, "secure" );
        if ( GetObjProperty( thing, "houseserial" ) == house.serial )
          var oldscript := GetObjProperty( thing, "oldscript" );
          if ( oldscript == error )
            oldscript := "";
          endif
          thing.usescript := oldscript;
          thing.movable := 1;
          EraseObjProperty( thing, "signserial" );
          EraseObjProperty( thing, "oldscript" );
        endif
      elseif ( ( GetObjProperty( thing, "lockeddown" ) == 1 ) &&
               ( thing.movable == 0 ) )
        thing.movable := 1;
        EraseObjProperty( thing, "signserial" );
        EraseObjProperty( thing, "lockeddown" );
      elseif ( thing.movable == 0 )
        if ( thing.objtype == 0x1A390 )
          MoveObjectToLocation( thing, thing.x, thing.y, ( thing.z - 7 ),
                                thing.realm, MOVEOBJECT_FORCELOCATION );
        else
          DestroyItem( thing );
        endif
      endif
    endif
  endforeach
  DestroyMulti( house );
  return;
endfunction

function reveal( sign, event )
  var lists := GetObjProperty( sign, "footage" );
  var holder := 0;
  foreach thing in lists
    foreach thing in ListObjectsInBox( thing[1], thing[2], thing[3], thing[4],
                                       thing[5], thing[6], sign.realm )
      if ( ( AP_GetStat( thing, STRENGTH ) ) && ( thing.hidden ) )
        thing.hidden := 0;
        holder := holder + 1;
      endif
    endforeach
  endforeach
  if ( !holder )
    SendSysMessage( event.source, "You didn't find anyone." );
  elseif ( holder == 1 )
    PrintTextAbovePrivate( event.source, "You have found one hider.!!",
                           event.source );
  else
    PrintTextAbovePrivate( event.source, "You have found " + holder + " hiders.!!",
                           event.source );
  endif
endfunction
