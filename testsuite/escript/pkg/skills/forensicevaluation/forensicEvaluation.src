//////////////////////////////////////////////////////////////////////////////////////////
//
//  ForensicEvaluation(who)
//
//  Author:         Unknown
//
//  Date Created:   Unknown
//
//  Description:    Performs forensic evaluation on a corpse to try to determine
//                  the means of death and identity of the killer.
//                  The program was modifed to allow the player, with sufficient
//                  skill in magery to determine if the victim was killed by magic
//                  and which spell dealt the lethal blow.
//                  Forensic Evaluation now reports if the victim was poisoned.
//                  One other modification now stores the info in a CProp on the "proof"
//                  which is displayed in a gump when the proof is double-clicked.
//  Parameters:     who - the user.
//
//  Return Value:   None
//
//  Modified: 2022-06-15 02:08:51 by Yukiko
//
//////////////////////////////////////////////////////////////////////////////////////////
use uo;
use cliloc;

include "include/client";
include ":virtue:noto";
include ":damage:damage";
include "include/trainingskill";
include ":attributes:attributes";

const UOBJ_PROOF := 0x1BE34;

var last_damage := struct;
var kname, kserial, kweapon, kspell, kpoison, strmessage;

program ForensicEvaluation( who )

  var data := {};
  data[1] := "forensics";
  data[2] := ReadGameClock();
  data[3] := 19;
  SetObjProperty( who, "LastUsedSkill", data );
  TrainingSkill( who, data[3] );

  var cprop_data;
  EraseObjProperty( who, "IsMeditating" );
  //  EraseObjProperty(who, "HealTimer");
  SendSysMessageCL( who, 501000, color := 4 ); // Select what you want to examine.
  var what := Target( who, TGTOPT_CHECK_LOS );
  if ( !what )
    SendSysMessageCL( who, 1042023, color := 33 ); // Cancelled.
    return;
  endif

  if ( ( what.IsA( POLCLASS_CONTAINER ) ) && !( what.IsA( POLCLASS_CORPSE ) ) )
    WasTheLockPicked( who, what );
    return;
  endif
  last_damage := GetObjProperty( what, "LastDamage" );
  Print( last_damage );
  // If no "LastDamage" CProp then nothing to report
  if ( !last_damage )
    SendSysMessageCL( who, 501005, color := 66 ); // You notice nothing unusual.
    return;
  endif

  // Collect the information,
  kname := last_damage.name; // Killer name.
  kserial := last_damage.serial; // Killer serial
  kweapon := last_damage.weapon.desc; // If a weapon was used, get the name
  kspell := last_damage.spell; // If a spell was used, get the name.
  kpoison := last_damage.damage_type; // Get the damage type. Specifically for detecting poisoning.
  // The last damage that was inflicred will always be the damage that killed the victim.
  // So, if poison damage is the last damage, that will be the cause of death even if
  // a weapon was used in the attack.

  var pts := CInt( GetAttribute( who, FORENSIC_EVALUATION ) / 10 ) + 20;
  if ( pts < 10 )
    pts := 10;
  endif

  if ( SkillCheck( who, FORENSIC_EVALUATION, -1, pts ) > 0 )
    SpeakTheFindings( who, kname, kpoison, kspell );
    cprop_data := BuildTheCProp( who, what, kname, kpoison, kspell );

    // Create the "evidence" scroll.
    var proof := CreateItemInBackpack( who, "evidence", 1 );
    proof.name := "Evidence about the death of " + what.desc;
    SetObjProperty( proof, "EvidenceText", cprop_data );
    SetObjProperty( proof, "VictimSerial", what.serial );
    if ( kserial )
      SetObjProperty( proof, "KillerSerial", kserial );
    endif
  else
    // Didn't pass the SkillCheck.
    PrintTextAbovePrivateCL( who, what, 501001, color := 44 ); // You cannot determine anything useful.
  endif

endprogram

function WasTheLockPicked( who, what )

  var last_picked := GetObjProperty( what, "LastPickedBySerial" );
  var last_magic_unlocked := GetObjProperty( what, "MagUnlockedBySerial" );

  if ( last_picked )
    var pts := CInt( GetAttribute( who, FORENSIC_EVALUATION ) / 10 ) + 20;
    if ( pts < 10 )
      pts := 10;
    endif

    if ( SkillCheck( who, FORENSIC_EVALUATION, -1, pts ) > 0 )
      var picker := SystemFindObjectBySerial( last_picked,
                                              SYSFIND_SEARCH_OFFLINE_MOBILES );
      PrintTextAboveCL( who, 1042749, picker.name, color := 66 ); // This lock was opened by ~1_PICKER_NAME~.
      PrintTextAbove( who, "The lock was picked by " + picker.name, color := 56 );
      return 1;
    else
      PrintTextAbove( who, "I cannot determine who might have tampered with this.",
                      color := 40 );
      SendSysMessageCL( who, 501001 ); // You cannot determine anything useful.
      return 0;
    endif
  elseif ( last_magic_unlocked )
    var picker := SystemFindObjectBySerial( last_magic_unlocked,
                                            SYSFIND_SEARCH_OFFLINE_MOBILES );
    if ( AP_GetSkill( who, MAGERY ) > 50 )
      SendSysMessage( who, "This was magically unloced by " + picker.name + ".",
                      color := 68 );
      PrintTextAbove( who, picker.name + "used magic unlock to open this." );
    else
      SendSysMessage( who, "Magic unlock was used on this but you cannot determine who did it.",
                      color := 68 );
      PrintTextAbove( who, "Magic unlock was used on this but I cannot determine who did it.",
                      color := 68 );
    endif
    return 1;
  else
    PrintTextAbove( who, "This hasn't been tampered with.", color := 66 );
    SendSysMessageCL( who, 501005, color := 66 ); // You notice nothing unusual.
  endif

endfunction

function SpeakTheFindings( byref who, byref kname, byref kpoison, byref kspell )

  // Check for the killer's name.
  if ( kname )
    SendSysMessage( who, kname + " appears to be the killer.", color := 68 );
  else
    SendSysMessage( who, "The killer's identity could not be confirmed.",
                    color := 68 );
  endif
  // If no spell was used then attempt to identify the other possible methods used.
  if ( !kspell )
    if ( kpoison )
      SendSysMessage( who, "The victim died from poison.", color := 68 );
      // A weapon was used in the attack but the killing "blow" was poison.
      if ( kweapon )
        SendSysMessage( who, "The victim was attacked with a " + kweapon + "." );
      endif
    elseif ( kweapon )
      SendSysMessage( who, "It appears a " + kweapon + " was used to kill the subject.",
                      color := 68 );
    else
      SendSysMessage( who, "I cannot determine the weapon that was used to kill the victim.",
                      color := 68 );
    endif
  // A certain amount of magery skill is required to detect death from a spell.
  elseif ( kspell )
    if ( AP_GetSkill( who, MAGERY ) > 80 )
      SendSysMessage( who, "The " + kspell + " spell was used to kill the subject.",
                      color := 68 );
    elseif ( AP_GetSkill( who, MAGERY ) > 50 )
      SendSysMessage( who, "It appears the  " + kspell + " spell was used to kill the subject.",
                      color := 68 );
    else
      SendSysMessage( who, "It appears supernatural means were used to kill the subject.",
                      color := 68 );
    endif
  else
    SendSysMessage( who, "I could not determine what was used to kill the subject.",
                    color := 68 );
  endif

endfunction

function BuildTheCProp( byref who, byref what, byref kname, byref kpoison,
                        byref kspell )

  // Here we build the CProp to be displayed in the HTML scroll gump.
  if ( kname )
    strmessage := what.desc + " was killed by " + kname + ". <br>";
  else
    strmessage := what.desc + "'s killer's identity could not be confirmed. <br>";
  endif

  if ( !kspell )
    if ( kpoison && kweapon )
      strmessage := strmessage + "The victim was attacked with a " + kweapon + " but ";
      strmessage := strmessage + "poison caused the victim's death ";
    elseif ( kweapon )
      strmessage := strmessage + "It a " + kweapon + " was used to kill the subject. <br>";
    else
      strmessage := strmessage + "I cannot determine the weapon that was used to kill the victim.";
    endif
  // A certain amount of magery skill is required to detect death from a spell.
  elseif ( kspell )
    if ( AP_GetSkill( who, MAGERY ) > 80 )
      strmessage := strmessage + "The " + kspell + " spell was used to kill the subject.";
    elseif ( AP_GetSkill( who, MAGERY ) > 50 )
      strmessage := strmessage + "It appears the " + kspell + " spell was used to kill the subject.";
    else
      strmessage := strmessage + "It appears the victim was killed by supernatural power.";
    endif
    if ( kpoison )
      strmessage := strmessage + "Poison was involved in the victim's death.";
    endif
  endif
  return strmessage;
endfunction
