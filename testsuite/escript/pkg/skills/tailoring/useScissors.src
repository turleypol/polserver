// $Id: useScissors.src 1266 2008-09-04 00:23:03Z AustinHeilman $

use uo;
use cfgfile;
use util;

include ":attributes:attributes";
include ":crafting:crafting";
include ":crafting:toolWear";

var scissors_config := ReadConfigFile( ":tailoring:scissors" );
var craft_config := ReadConfigFile( ":tailoring:tailoring" );

program use_scissors( who, tool )
  if ( !ReserveItem( tool ) )
    SendSysMessage( who, "That is already in use." );
    return 0;
  elseif ( ( !tool.movable ) || !ReserveItem( tool ) )
    SendSysMessage( who, "You cannot use that" );
    return 0;
  elseif ( !( tool in EnumerateItemsInContainer( who.backpack ) ) )
    SendSysMessage( who, "That item is not in your backpack." );
    return 0;
  endif

  EraseObjProperty( who, "#IsMeditating" );
  EraseObjProperty( who, "#HealTimer" );

  SendSysMessage( who, "Select an item to cut." );
  var cloth := Target( who );
  if ( !( cloth in EnumerateItemsInContainer( who.backpack ) ) )
    SendSysMessage( who, "That item is not in your backpack." );
    return 0;
  endif

  cutItems( who, cloth, tool );
endprogram

function cutItems( who, item, tool )
  if ( !item )
    SendSysMessage( who, "Cancelled." );
    return;
  elseif ( !ReserveItem( item ) )
    SendSysMessage( who, "You cannot use that." );
    return;
  elseif ( !item.movable )
    SendSysMessage( who, "You cannot use that." );
    return;
  elseif ( item in ListEquippedItems( who ) )
    SendSysMessage( who, "You cannot cut something being worn!" );
    return;
  elseif ( !( item in EnumerateItemsInContainer( who.backpack ) ) )
    SendSysMessage( who, "That item is not in your backpack." );
    return 0;
  endif

  // If it is an armor class, then fetermine if it is cloth or leather.
  var material, new_item, material_cnt, item_color, new_cloth;
  //  if (item.isA(POLCLASS_ARMOR))
  // It is clothing or cloth. So cut it into bandages.
  if ( item.IsClothes() || item.IsCloth() )
    playCraftWork( who, "tailoring", 1 );
    // If the item is clothing we default to this.
    var bandage_amount := CInt( item.GetMaterialAmount() / 2 );
    // Otherwise if it is cloth we need the quantity of cloth
    if ( item.IsCloth() )
      bandage_amount := item.amount * 2;
    endif
    if ( bandage_amount < 1 )
      bandage_amount := 1;
    endif
    var created := CreateItemInBackpack( who, "bandage", bandage_amount );
    if ( !created )
      SendSysMessage( who, "You drop " + bandage_amount + " bandages at your feet.",
                      color := 56 );
      created := CreateItemAtLocation( who.x, who.y, who.z, "bandage",
                                       bandage_amount, who.realm );
    endif
    created.color := item.color;
    SendSysMessage( who, "You place " + bandage_amount + " bandages in your backpack.",
                    color := 66 );
    DestroyItem( item );
    CheckToolWear( who, tool, TAILORING );
    return;
  elseif ( item.IsLeatherClothes() )
    playCraftWork( who, "tailoring", 1 );
    var leather_amount := CInt( ( item.GetMaterialAmount() * AP_GetSkill( who,
                                                                          TAILORING ) * 75 ) / 10000 );
    if ( leather_amount < 1 )
      leather_amount := 1;
    endif
    var base_resource := CInt( GetObjProperty( item, "material" ) );
    if ( !base_resource )
      base_resource := 0x1081;
    endif
    var created := CreateItemInBackpack( who, base_resource, leather_amount );
    if ( !created )
      SendSysMessage( who,
                      "You drop " + leather_amount + " pieces of cut leather at your feet.",
                      color := 56 );
      created := CreateItemAtLocation( who.x, who.y, who.z, base_resource,
                                       leather_amount, who.realm );
    endif
    created.color := item.color;
    SendSysMessage( who,
                    "You place " + leather_amount + " pieces of cut leather in your backpack.",
                    color := 66 );
    DestroyItem( item );
    CheckToolWear( who, tool, TAILORING );
    return;
  elseif ( GetObjProperty( item, "material" ) )
    material := FindConfigElem( resource_config,
                                GetObjProperty( item, "material" ) );
    new_item := material;
    material_cnt := CInt( craft_config[item.objtype].Mat_1_Amt );
    item_color := material.Color;
  // else
  // // Since not crafted, block cutting it!
  // SendSysMessage(who, "Scissors cannot be used on that to produce anything.", color := 33);
  // return;
  endif
  //  else
  // Since it's not armor, it's either resourceList material or scissors.cfg item.
  // ResourceList items MUST be in the scissors config!
  material := FindConfigElem( scissors_config, item.objtype );
  // If it's fine, pull the information.
  if ( material && !material.errortext )
    new_item := CInt( material.newitem );
    material_cnt := CInt( material.material );
    // material_cnt := material_cnt * item.amount;
    item_color := item.color;
  else
    // Since not listed in crafting config, or scissors, don't cut it!
    SendSysMessage( who, "Scissors cannot be used on that to produce anything.",
                    color := 33 );
    return;
  endif
  //  endif

  // If there is still nothing, we can't do anything with this item! Redundancy
  if ( !material || material.errortext )
    SendSysMessage( who, "Scissors cannot be used on that to produce anything.",
                    color := 33 );
    return;
  endif

  // If there is no product to make from this, we can't do anything with this item! Redundancy
  if ( !new_item || new_item.errortext )
    SendSysMessage( who, "Scissors cannot be used on that to produce anything.",
                    color := 33 );
    return;
  endif
  // mods
  // Now let's handle cutting this bad boy up!
  if ( material )
    playCraftWork( who, "tailoring", 1 );

    // If it's armor, the amount gets modified based on skill to get original cost back.
    var amt := 1;
    if ( item.isA( POLCLASS_ARMOR ) )
      amt := CInt( ( material_cnt * AP_GetSkill( who, TAILORING ) * 75 ) / 10000 );
    else
      amt := CInt( item.amount * material_cnt );
    endif
    if ( amt < 1 )
      amt := 1;
    endif

    if ( DestroyItem( item ) )
      CheckToolWear( who, tool, TAILORING );
      // CreateItemInBackpack(who, new_item, material_cnt);
      // return;
      var leftovers, tempname;
      // If this is leather, let's make it's base objtype.
      if ( Lower( resource_config[new_item].Type ) == "leather" )
        leftovers := GetItemDescriptor( new_item );
        if ( item_color )
          leftovers.color := item_color;
        endif
        leftovers.CProps.insert( "material", new_item );
        tempname := ( "cut " + material.Name );
        new_cloth := CreateItemInBackpack( who, leftovers, amt );
        if ( tempname && !tempname.errortext )
          SetName( new_cloth, tempname );
        endif
      else
        leftovers := GetItemDescriptor( 0x1767 );
        leftovers.Color := item_color;
        new_cloth := CreateItemInBackpack( who, leftovers, amt );
      endif

      if ( !new_cloth )
        // If no room in pack, create at cutter's feet.
        if ( Lower( resource_config[new_item].Type ) == "leather" )
          // Leftovers and such was created above if this still passes here.
          new_cloth := CreateItemAtLocation( who.x, who.y, who.z, leftovers,
                                             amt, who.realm );
          if ( tempname && !tempname.errortext )
            SetName( new_cloth, tempname );
          endif
        else
          // Leftovers and such was created above if this still passes here.
          new_cloth := CreateItemAtLocation( who.x, who.y, who.z, leftovers,
                                             amt, who.realm );
        endif
      endif
    endif
  else
    SendSysMessage( who, "Scissors cannot be used on that to produce anything.",
                    color := 33 );
    return;
  endif
endfunction
