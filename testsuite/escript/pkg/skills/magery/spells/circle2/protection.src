use uo;
use os;
use cfgfile;

include ":attributes:attributes";
include ":timedScripts:timedScripts";
include ":timedScripts:buffIcon";
include ":damage:damage";
include ":magery:spells";

var mods := struct;
var ts_cfg_elem := TS_GetCfgElem( "Protection" );
var buff_icon := CInt( ts_cfg_elem.BuffIcon );
var cliloc_name := CInt( ts_cfg_elem.cliloc_name );
var cliloc_desc := CInt( ts_cfg_elem.cliloc_desc );

program cast_protection( params )
  var caster := params[1];
  var info := params[2];
  Broadcast( caster.name );
  if ( GetObjProperty( caster, "Protection" ) )
    RemoveProtection( caster );
  else
    ApplyProtection( caster );
  endif

  MS_PlaySpellSFX( info.spell_id, caster );
  MS_PlaySpellGFX( info.spell_id, caster, caster );

  return 1;
endprogram

function ApplyProtection( caster )

  // Get effective Physical Damage Resistance.
  var phys_resist_amt := caster.resist_physical + caster.resist_physical_mod;

  // Get effective Resisting Spells skill level.
  var resist_spells_amt := AP_GetSkill( caster, RESISTING_SPELLS );

  // Get the amount caster's Inscription skill will negate the penalties for Protection.
  // var  inscr_help := CInt(AP_GetSkill(caster, INSCRIPTION) / 20);

  // Calculate the Physical Resistance penalty.
  var phys_resist_penalty := 10 + ( RandomInt( 6 ) );

  // Calculate the Resisting Spells penalty.
  var resist_spells_penalty := CDbl( 30 + RandomInt( 6 ) );

  // Now we determine if the penalty will cause Physical Resistance to go below zero.
  // If not, no problem. If so we drop it to zero.
  if ( phys_resist_amt - phys_resist_penalty >= 0 )
    caster.resist_physical_mod := caster.resist_physical_mod - phys_resist_penalty;
  else
    caster.resist_physical_mod := caster.resist_physical_mod - phys_resist_amt;
    phys_resist_penalty := phys_resist_amt;
  endif
  // Now we determine if the penalty will cause Spell Resistance to go below zero.
  // If not, no problem. If so we drop it to zero.
  if ( resist_spells_amt - resist_spells_penalty >= 0 )
    AP_ModifySkillMod( caster, RESISTING_SPELLS,
                       AP_GetSkillMod( caster, RESISTING_SPELLS )
                     - resist_spells_penalty );
  else
    AP_ModifySkillMod( caster, RESISTING_SPELLS,
                       AP_GetSkillMod( caster, RESISTING_SPELLS )
                     - resist_spells_amt );
    resist_spells_penalty := resist_spells_amt;
  endif

  mods.+phys_resist_penalty := phys_resist_penalty;
  mods.+resist_spells_penalty := resist_spells_penalty;
  // At present there is no determined way to modify casting speed and other stats:
  // ModifyMagicProperties(caster, "FasterCastSpeed", -2);
  SetObjProperty( caster, "Protection", mods );
  caster.addBuff( buff_icon, 0, cliloc_name, cliloc_desc, "" );

endfunction

function RemoveProtection( caster )

  mods := GetObjProperty( caster, "Protection" );
  caster.resist_physical_mod := caster.resist_physical_mod + mods.phys_resist_penalty;
  // AP_ModifySkillMod(caster, RESISTING_SPELLS, (AP_GetSkillMod(caster, RESISTING_SPELLS) + mods.resist_spells_penalty));
  AP_ModifySkillMod( caster, RESISTING_SPELLS, mods.resist_spells_penalty );
  // At present there is no determined way to modify casting speed and other stats:
  // ModifyMagicProperties(caster, "FasterCastSpeed", 2);
  EraseObjProperty( caster, "Protection" );
  caster.delbuff( buff_icon );

endfunction

/*
 * This from uoguide.com on the protection spell:
 * Characters under the Protection spell effect can no longer have their
 * spells "disrupted" when hit. As a result, those affected by the spell
 * experience: decreased physical resistance value between -15 to -10;
 * a reduction of their Resisting Spells skill value between -35 to -30;
 * and a slower casting speed modifier of 2 points. The penalties for
 * physical resist and Resisting Spells is lessened by +1 for each 20
 * skill points of Inscription (including Jack of All Trades for humans.
 * However, these penalties can lower neither Resisting Spells nor
 * the casting speed below 0. While the modifier for Resisting Spells can
 * be overcome by +skill on jewelry and/or armor, the FC penalty cannot.
 * This FC modifier is applied after the cap takes effect, so additional
 * FC above the cap will not counteract the negative effect of this spell.
 * The protection spell has an indefinite duration, becoming active when cast,
 * and deactivated when re-cast. This spell, along with Reactive Armor and
 * Magic Reflection, will stay on even after logging out - until you
 * turn it off by casting it again. The spell effect will be purged
 * when dying, and Protection has to be re-cast after death.
 */
