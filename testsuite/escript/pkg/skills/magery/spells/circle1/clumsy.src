use uo;
use os;
use util;

include ":attributes:attributes";
include ":timedScripts:timedScripts";
include ":magery:spells";

program cast_clumsy( parms )
  var caster := parms[1];
  var info := parms[2];
  var cast_on;
  cast_on := MS_Target( caster, info.targ, "Select a target.",
                        TGTOPT_CHECK_LOS + TGTOPT_HARMFUL );
  if ( !cast_on ) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
    cast_on := parms[4];
  endif
  if ( !cast_on )
    SendSysMessage( caster, "Cancelled.", color := 33 );
    return 0;
  endif
  if ( !MS_MobileCheck( caster, cast_on ) )
    return 0;
  endif
  MS_PlaySpellSFX( info.spell_id, cast_on );
  MS_PlaySpellGFX( info.spell_id, cast_on, caster );
  if ( Reflected( cast_on ) )
    SendSysMessage( caster, "The spell was reflected back onto you!!!",
                    color := 33 );
    cast_on := caster;
  endif

  // Dex decrease % = (Eval / 10) + 8) - (Resist / 10)
  var percent := CDbl( ( AP_GetSkill( caster, EVALUATING_INTELLIGENCE ) / 10 )
                     + 8 ) - ( AP_GetSkill( cast_on, RESISTING_SPELLS ) / 10 );
  var points := CInt( AP_GetStat( cast_on, DEXTERITY ) * ( percent / 100 ) );

  // Duration: ((Eval / 5) + 1) * 6
  var duration := ( ( AP_GetSkill( caster, EVALUATING_INTELLIGENCE ) / 5 ) + 1 )
                    * 6;
  TS_StartTimer( cast_on, "Clumsy", duration, points, caster );
  // Set LastDamage info.
  var last_damage := struct;
  last_damage.+serial := caster.serial;
  last_damage.+time := POLCore().systime;
  last_damage.+amount := points;
  last_damage.+type := "Clumsy";
  if ( caster.acctname )
    last_damage.+acctname := caster.acctname;
  endif

  if ( caster.name )
    last_damage.+name := caster.name;
  endif
  SetObjProperty( cast_on, "LastDamage", last_damage );

endprogram
