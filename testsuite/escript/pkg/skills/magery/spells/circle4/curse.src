use os;
use uo;
use util;

include ":attributes:attributes";
include ":timedScripts:timedScripts";
include ":timedScripts:buffIcon";
include ":magery:spells";
include "include/client";

program cast_curse( parms )
  var caster := parms[1];
  var info := parms[2];
  var cast_on;
  cast_on := MS_Target( caster, info.targ, "Select a target.",
                        TGTOPT_CHECK_LOS + TGTOPT_HARMFUL );
  if ( !cast_on ) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
    cast_on := parms[4];
  endif
  if ( !cast_on )
    SendSysMessage( caster, "Cancelled.", color := 33 );
    return 0;
  endif
  if ( !MS_MobileCheck( caster, cast_on ) )
    return 0;
  endif

  // Not sure what tekproxy was thinking with the following but he commented it out so I am leaving it in.
  /*
   // Note: Skill gain is a little too easy
   var resist_skill := AP_GetSkill(caster, RESISTING_SPELLS);
   var diff := info.difficulty + (15 * (resist_skill / 100.0));
   var adv_diff_bonus := info.difficulty + CInt(((RandomInt(150) + 1.0) - (15 * (resist_skill / 100.0) * 10)) / 10.0);
   if ( adv_diff_bonus < 0 )
           adv_diff_bonus := 0;
   endif

   var adv_diff := resist_skill + adv_diff_bonus;
   for i := 1 to 1000
       diff := info.difficulty + (15 * (resist_skill / 100.0));
       adv_diff_bonus := info.difficulty + CInt(((RandomInt(150) + 1.0) - (15 * (resist_skill / 100.0) * 10)) / 10.0);
       if ( adv_diff_bonus < 0 )
               adv_diff_bonus := 0;
       endif
       adv_diff := resist_skill + adv_diff_bonus;
       SkillCheck(caster, RESISTING_SPELLS, diff, adv_diff);
       SleepMS(2);
   endfor
*/

  MS_PlaySpellSFX( info.spell_id, cast_on );
  MS_PlaySpellGFX( info.spell_id, cast_on, caster );

  // Str increase % = (Eval / 10 + 1)
  var percent := CDbl( ( AP_GetSkill( caster, MAGERY ) / 10 ) + 1 );
  // var points := CInt(AP_GetSkill(caster, MAGERY) * (percent / 100));

  // Duration: ((Eval / 5) + 1) * 6
  var duration := ( ( AP_GetSkill( caster, EVALUATING_INTELLIGENCE ) / 5 ) + 1 )
                    * 6;
  TS_StartTimer( cast_on, "Curse", duration, percent, caster );

  return 1;
endprogram
