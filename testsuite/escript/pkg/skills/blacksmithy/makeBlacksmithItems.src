// //$Id: makeBlacksmithItems.src 1473 2009-03-12 01:26:41Z muaddib_pol $

use cfgfile;
use cliloc;
use util;

include ":attributes:attributes";
include ":crafting:crafting";
include ":crafting:craftingRepair";
include ":crafting:toolWear";
include ":itemutils:itemUtil";
include ":itemutils:itemdesc";
include ":itemutils:itemProps";

var item_config := ReadConfigFile( ":*:itemdesc" );
var craft_config := ReadConfigFile( ":blacksmithy:blacksmithy" );

program use_SmithTool( who, tool )
  // If meditating stop meditation.
  if ( GetObjProperty( who, "IsMeditating" ) )
    EraseObjProperty( who, "IsMeditating" );
    SendSysMessageCL( who, 500134, {}, 3, 33 ); // You stop meditating.
  endif
  // If healing with bandages, stop healing.
  EraseObjProperty( who, "HealTimer" );

  if ( !ReserveItem( tool ) )
    SendSysMessageCL( who, 501973, {}, 3, 33 ); // You cannot use that.
    return 0;
  elseif ( ( !tool.movable ) )
    SendSysMessageCL( who, 1042597, {}, 3, 33 ); // That is locked down.
    return 0;
  elseif ( !tool in ListEquippedItems( who ) )
    if ( !( tool in EnumerateItemsInContainer( who.backpack ) ) )
      SendSysMessage( who, "That item is not in your backpack nor equipped.",
                      3, 33 );
      return 0;
    endif
  endif

  var rinfo := sendCraftGump( who, "Blacksmithy" );

  // OK was pressed, close it on out
  if ( rinfo == 0 )
    return 0;
  endif

  var the_objtype := rinfo[1];
  var amt := rinfo[2];
  var repairit := rinfo[3];
  var resmeltit := rinfo[4];

  if ( repairit )
    repair_this( who, craft_skill );
    return 0;
  elseif ( resmeltit )
    resmelt( who, craft_skill );
    return 0;
  endif

  makeBlacksmithItems( who, the_objtype, amt, tool );

endprogram

function makeBlacksmithItems( who, what, amt, tool )

  if ( !what )
    SendSysMessage( who, "Cancelled" );
    return 0;
  endif

  var anvil_near := 0;
  foreach item in ( ListStaticsNearLocation( who.x, who.y, who.z, 3, 02,
                                             who.realm ) )
    if ( ( item.objtype == 0xFAF ) || ( item.objtype == 0xFB0 ||
         item.objtype == 0x2DD5 || item.objtype == 0x2DD6 ) )
      anvil_near := 1;
      break;
    endif
  endforeach
  if ( !anvil_near )
    foreach item in ListItemsNearLocation( who.x, who.y, who.z, 3, who.realm )
      if ( ( item.objtype == 0xFAF ) || ( item.objtype == 0xFB0 ||
           item.objtype == 0x2DD5 || item.objtype == 0x2DD6 ) )
        anvil_near := 1;
        break;
      endif
    endforeach
  endif
  if ( !anvil_near )
    SendSysMessageCL( who, 1044267, {}, 3, 33 ); // You must be near an anvil and a forge to smith items.
    return 0;
  endif
  var forge_near := 0;
  foreach item in ( ListStaticsNearLocation( who.x, who.y, who.z, 3, 02,
                                             who.realm ) )
    if ( ( item.objtype == 0xfb1 ) || item.objtype == 0x2DD8 ||
         ( ( item.objtype >= 0x197a ) && ( item.objtype <= 0x19a9 ) ) )
      forge_near := 1;
      break;
    endif
  endforeach
  if ( !forge_near )
    foreach item in ( ListItemsNearLocation( who.x, who.y, who.z, 3, who.realm ) )
      if ( ( item.objtype == 0xfb1 ) || item.objtype == 0x2DD8 ||
           ( ( item.objtype >= 0x197a ) && ( item.objtype <= 0x19a9 ) ) )
        forge_near := 1;
        break;
      endif
    endforeach
  endif
  if ( !forge_near )
    SendSysMessageCL( who, 1044267, {}, 3, 33 ); // You must be near an anvil and a forge to smith items.
    return 0;
  endif

  // Metal is sent for the ResourceList entry type.
  var itemchk := MaterialSelection( who, craft_skill,
                                    lower( craft_config[what].Material_1 ) );
  if ( !itemchk )
    return 0;
  endif
  var use_on := itemchk[1];
  var ptmod := itemchk[3];

  var num, theitem;
  var itemname := craft_config[what].name;
  var material := Cint( craft_config[what].Mat_1_Amt );
  var reqd := Cint( craft_config[what].skill );
  var diff := Cint( craft_config[what].difficulty );
  var pts := Cint( craft_config[what].points );
  pts := CInt( pts + ptmod );
  var counter := 0, x := who.x, y := who.y;

  while ( counter < amt )
    if ( ( who.x != x ) || ( who.y != y ) )
      SendSysMessage( who, "You stop smithing." );
      break;
    elseif ( !tool )
      break;
    endif

    Sleep( 2 );

    if ( GetAmount( use_on ) >= material )
      if ( CraftCheckSkill( who, craft_skill, diff, pts ) )
        theitem := CreateCraftItem( who, craft_skill, use_on, use_on.objtype,
                                    what, material, itemname, reqd );
        if ( TypeOf( theitem ) != "ItemRef" )
          SubtractAmount( use_on, ( material / 2 ) );
          SendSysMessageCL( who, 1044043, {}, 3, 33 ); // You failed to create the item, and some of your materials are lost.
          counter := counter + 1;
          continue;
        else
          IU_TransferItemProps( use_on, theitem );
        endif
      else
        num := CInt( randomint( material ) / 2 ) + 1;
        if ( SubtractAmount( use_on, num ) )
          SendSysMessageCL( who, 500441, {}, 3, 33 ); // You lost some metal.
        endif
      endif
      CheckToolWear( who, tool, craft_skill );
    else
      SendSysMessageCL( who, 500439, {}, 3, 33 ); // There is not enough metal there to make that item.
      return 0;
    endif
    counter := counter + 1;
  endwhile

  return 0;

endfunction
