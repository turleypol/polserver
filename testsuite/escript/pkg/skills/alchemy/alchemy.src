// $Id: alchemy.src 1473 2009-03-12 01:26:41Z muaddib_pol $

use cfgfile;
use cliloc;
use util;

include ":attributes:attributes";
include ":crafting:crafting";
include ":crafting:craftingRepair";
include ":crafting:toolWear";
include ":virtue:noto";

var item_config := ReadConfigFile( ":*:itemdesc" );
var craft_config := ReadConfigFile( ":alchemy:alchemy" );

program use_AlchTool( who, tool )

  if ( !ReserveItem( tool ) )
    SendSysMessage( who, "That is already in use." );
    return 0;
  elseif ( ( !tool.movable ) || !ReserveItem( tool ) )
    SendSysMessageCL( who, 501973, {}, 3, 33 ); // You cannot use that.
    return 0;
  elseif ( !( tool in EnumerateItemsInContainer( who.backpack ) ) )
    SendSysMessageCL( who, 1042593, {}, 3, 33 ); // That is not in your backpack.
    return 0;
  endif
  if ( GetObjProperty( who, "#IsMeditating" ) )
    SendSysMessageCL( who, 500134, {}, 3, 33 ); // You stop meditating.
    EraseObjProperty( who, "#IsMeditating" );
  endif
  EraseObjProperty( who, "#HealTimer" );

  var rinfo := sendCraftGump( who, ALCHEMY );

  // OK was pressed, close it on out
  if ( rinfo == 0 )
    return 0;
  endif

  var the_objtype := rinfo[1];
  var amt := rinfo[2];

  if ( craft_config[the_objtype].Assemble == 1 )
    CraftAssembly( who, ALCHEMY, tool, the_objtype, amt );
  else
    makeAlchemyItems( who, the_objtype, amt, tool );
  endif

endprogram

function makeAlchemyItems( who, what, amt, tool )

  if ( !what )
    SendSysMessageCL( who, 1042023, color := 33 ); // Cancelled.
    return 0;
  endif

  // what's type is sent for the ResourceList entry type.
  var itemchk := MaterialSelection( who, craft_skill,
                                    lower( craft_config[what].Material_1 ) );
  if ( !itemchk )
    return 0;
  endif
  var use_on := itemchk[1];
  var ptmod := itemchk[3];

  var num, theitem;
  var itemname := craft_config[what].name;
  var material := Cint( craft_config[what].Mat_1_Amt );
  var reqd := Cint( craft_config[what].skill );
  var diff := Cint( craft_config[what].difficulty );
  var pts := Cint( craft_config[what].points );
  pts := CInt( pts + ptmod );
  var counter := 0, x := who.x, y := who.y;

  while ( counter < amt )
    if ( ( who.x != x ) || ( who.y != y ) )
      SendSysMessage( who, "You stop brewing." );
      break;
    endif
    if ( !tool )
      break;
    endif

    if ( GetAmount( use_on ) >= material )
      if ( CraftCheckSkill( who, craft_skill, diff, pts ) )
        theitem := CreateCraftItem( who, craft_skill, use_on, use_on.objtype,
                                    what, material, itemname, reqd );
        if ( TypeOf( theitem ) != "ItemRef" )
          SubtractAmount( use_on, ( material / 2 ) );
          SendSysMessageCL( who, 1044043, {}, 3, 33 ); // You failed to create the item, and some of your materials are lost.
          counter := counter + 1;
          continue;
        endif
        case ( theitem.objtype )
          0x2DC04:
            VS_AdjustVirtue( who, "honor", -1, prob := 25 );
            VS_AdjustVirtue( who, "compassion", -1, 25 );
          0x2DC05:
            VS_AdjustVirtue( who, "honor", -1, 40 );
            VS_AdjustVirtue( who, "compassion", -1, 40 );
          0x2DC06:
            VS_AdjustVirtue( who, "honor", -1, 55 );
            VS_AdjustVirtue( who, "compassion", -1, 55 );
          0x2DC07:
            VS_AdjustVirtue( who, "honor", -1, 70 );
            VS_AdjustVirtue( who, "compassion", -1, 70 );
        endcase
      else
        num := CInt( randomint( material ) / 2 ) + 1;
        if ( SubtractAmount( use_on, num ) )
          SendSysMessage( who, "You lost some material" );
        endif
      endif
      CheckToolWear( who, tool, craft_skill );
    else
      SendSysMessageCL( who, 502910, {}, 3, 33 ); // You don't have the resources required to make that item.
      return 0;
    endif
    counter := counter + 1;
  endwhile

  return 0;

endfunction
