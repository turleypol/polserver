use uo;
use os;
use util;

include ":attributes:attributes";
include ":magery:spells";
include "include/client";
include "include/sounds";
include ":sorcery:sorceryOpts";
include ":damage:damage";

var npccfg := ReadConfigFile( "npcdesc" );

program chill( parms )

  var caster := parms[1];
  var info := parms[2];
  var cast_on;
  cast_on := MS_Target( caster, info.targ, "Select a target.",
                        TGTOPT_CHECK_LOS + TGTOPT_HELPFUL );
  if ( !cast_on ) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
    cast_on := parms[4];
  endif
  if ( !cast_on )
    SendSysMessage( caster, "Cancelled.", color := 33 );
    return 0;
  endif
  if ( !MS_MobileCheck( caster, cast_on ) )
    return 0;
  endif

  AwardRawAttributePoints( caster, MAGERY, 50, SKILLID_MAGERY );
  var dmg := CInt( RandomInt( 3 ) + ( AP_GetStat( caster, INTELLIGENCE ) / 19 ) );
  PlayObjectCenteredEffect( cast_on, 0x375a, 7, 0x10 );
  PlaySoundEffect( cast_on, 0x042 );
  var var_damage := dmg;
  if ( cast_on.isA( POLCLASS_NPC ) )
    var element := npccfg[cast_on.npctemplate].elemental;
    if ( element == "water" )
      HealDamage( cast_on, dmg );
    elseif ( element == "fire" )
      var_damage := dmg * 3;
      ApplySpellDamageEX( cast_on, var_damage, DMG_COLD, caster, info.Circle,
                          "Chill" );
    else
      var_damage := dmg * 2;
      ApplySpellDamageEX( cast_on, var_damage, DMG_COLD, caster, info.Circle,
                          "Chill" );
    endif
  else
    ApplySpellDamageEX( cast_on, var_damage, DMG_COLD, caster, info.Circle,
                        "Chill" );
  endif
  return 1;

endprogram
