use uo;
use os;
use util;

include ":attributes:attributes";
include ":magery:spells";
include "include/client";
include "include/sounds";
include ":sorcery:sorceryOpts";
include ":damage:damage";

program chainbolt( parms )

  var caster := parms[1];
  var info := parms[2];
  var cast_on := parms[4];
  if ( !cast_on ) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
    cast_on := MS_Target( caster, info.targ, "Select a target:",
                          TGTOPT_CHECK_LOS + TGTOPT_HARMFUL );
  endif
  if ( !cast_on )
    SendSysMessage( caster, "Cancelled.", color := 33 );
    return 0;
  endif
  if ( !MS_MobileCheck( caster, cast_on ) )
    return 0;
  endif

  var hops := RandomDiceRoll( ( "2d3+" + CStr( CInt( AP_GetStat( caster,
                                                                 INTELLIGENCE ) / 15.0 ) ) ) );
  var damdie := "d6+";
  var victims := {};
  var picklist := {};
  var picklen := 0;
  var source := { caster.x, caster.y, caster.z };
  var lasthit := caster.serial;
  var victim;
  while ( hops > 0 )

    PlayMovingEffectXYZ( source[1], source[2], source[3] + 5, cast_on.x,
                         cast_on.y, cast_on.z + 5, 0x3818, 0x1, 0, 0,
                         cast_on.realm );
    PlaySoundEffect( cast_on, 0x020b );
    damdie := RandomDiceRoll( CStr( hops ) + "d8+" + CStr( hops ) );
    source := { cast_on.x, cast_on.y, cast_on.z };
    lasthit := cast_on.serial;
    ApplySpellDamageEX( cast_on, damdie, DMG_ENERGY, caster, info.Circle,
                        "Chain Bolt" );
    hops := hops - 1;
    picklen := 0;
    picklist := {};

    victims := ListMobilesNearLocation( source[1], source[2], source[3], 2,
                                        caster.realm );
    foreach victim in victims
      if ( ( victim.serial != lasthit ) && ( AP_GetVital( victim, HITS ) ) )
        picklen := picklen + 1;
        picklist[picklen] := victim;
      endif
    endforeach

    victims := ListMobilesNearLocation( source[1], source[2], source[3], 3,
                                        caster.realm );
    foreach victim in victims
      if ( ( RandomInt( 4 ) == 1 ) && ( victim.serial != lasthit ) &&
           ( AP_GetVital( victim, HITS ) ) )
        picklen := picklen + 1;
        picklist[picklen] := victim;
      endif
    endforeach

    victims := ListMobilesNearLocation( source[1], source[2], source[3], 4,
                                        caster.realm );
    foreach victim in victims
      if ( ( RandomInt( 6 ) == 1 ) && ( victim.serial != lasthit ) &&
           ( AP_GetVital( victim, HITS ) ) )
        picklen := picklen + 1;
        picklist[picklen] := victim;
      endif
    endforeach

    if ( len( picklist ) < 1 )
      return 0;
    else
      victim := picklist[( RandomInt( len( picklist ) ) + 1 )];
    endif
    sleep( 1 );

  endwhile

endprogram
