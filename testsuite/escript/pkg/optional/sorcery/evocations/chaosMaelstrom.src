use uo;
use os;
use util;

include ":attributes:attributes";
include ":magery:spells";
include "include/client";
include "include/sounds";
include ":sorcery:sorceryOpts";
include ":damage:damage";

program chaosmaelstrom( parms )

  var caster := parms[1];
  var info := parms[2];
  var cast_on := parms[4]; // If NPC casting there'll be something here.
  if ( !cast_on ) // If no cast_on then this is being cast by a player.
    cast_on := MS_TargetCoordinates( caster, info.targ, "Select a location:" );
  endif
  if ( !cast_on )
    SendSysMessage( caster, "Cancelled.", color := 33 );
    return 0;
  endif
  if ( !CheckLosAt( caster, cast_on.x, cast_on.y, cast_on.z ) )
    return 0;
  endif

  var thevortex := CreateItemAtLocation( cast_on.x, cast_on.y, cast_on.z, 0x37cc,
                                         1, caster.realm );
  thevortex.movable := 0;
  thevortex.color := 0x8455;
  var duration := RandomInt( CInt( AP_GetStat( caster, INTELLIGENCE ) / 2 )
                           + CInt( AP_GetStat( caster, INTELLIGENCE ) / 10 ) );
  if ( duration < 10 )
    duration := 10;
  endif
  var victims, newx, newy, newz;
  var vortexlist := { thevortex };
  var vortexlen := 1;

  Detach();
  var mana_dmg;
  while ( duration > 0 )

    foreach thevortex in vortexlist
      PlaySoundEffect( thevortex, 0x15 );

      if ( thevortex )
        if ( RandomInt( 100 ) < 15 )
          PrintTextAbove( thevortex, "The vortex splits!" );
          vortexlen := len( vortexlist ) + 1;
          vortexlist[vortexlen] := CreateItemAtLocation( cast_on.x, cast_on.y,
                                                         cast_on.z, 0x37cc, 1,
                                                         caster.realm );
          vortexlist[vortexlen].color := 0x8455;
          vortexlist[vortexlen].movable := 0;
        endif

        if ( RandomInt( 100 ) < 4 )
          victims := ListMobilesNearLocationEx( thevortex.x, thevortex.y,
                                                thevortex.z, 5,
                                                LISTEX_FLAG_NORMAL + LISTEX_FLAG_HIDDEN,
                                                thevortex.realm );
          foreach victim in victims
            PrintTextAbove( thevortex, "The vortex explodes!" );
            PlayObjectCenteredEffect( victim, 0x36b0, 0xf, 0x1e );
            PlaySoundEffect( victim, 0x020b );
            ApplyDamageEX( victim, RandomDiceRoll( "10d6" ), DMG_PHYSICAL, 0 );
          endforeach
        endif

        victims := ListMobilesNearLocationEx( thevortex.x, thevortex.y,
                                              thevortex.z, 4,
                                              LISTEX_FLAG_NORMAL + LISTEX_FLAG_HIDDEN,
                                              thevortex.realm );
        foreach victim in victims
          if ( ( AP_GetVital( victim, HITS ) ) && ( victim.serial != caster.serial ) )
            PlayLightningBoltEffect( victim );
            PlaySoundEffect( victim, SFX_SPELL_LIGHTNING );
            ApplySpellDamageEX( victim, RandomDiceRoll( "2d4+2" ), DMG_ENERGY,
                                caster, info.Circle, "Chaos Maelstrom" );
          endif
        endforeach

        victims := ListMobilesNearLocationEx( thevortex.x, thevortex.y,
                                              thevortex.z, 3,
                                              LISTEX_FLAG_NORMAL + LISTEX_FLAG_HIDDEN,
                                              thevortex.realm );
        foreach victim in victims
          if ( ( AP_GetVital( victim, HITS ) ) && ( victim.serial != caster.serial ) )
            PlaySoundEffect( victim, SFX_SPELL_HARM );
            mana_dmg := RandomDiceRoll( "3d6" );
            AP_SetVital( victim, MANA, AP_GetVital( victim, MANA ) - mana_dmg );
            if ( ( AP_GetVital( victim, MANA ) < 0 ) ||
                 ( AP_GetVital( victim, MANA ) > 1000 ) )
              AP_SetVital( victim, MANA, 0 );
            endif
          endif
          // Set LastDamage info.
          var last_damage := struct;
          last_damage.+serial := caster.serial;
          last_damage.+time := POLCore().systime;
          last_damage.+amount := mana_dmg;
          last_damage.+type := "Mana";
          if ( caster.acctname )
            last_damage.+acctname := caster.acctname;
          endif

          if ( caster.name )
            last_damage.+name := caster.name;
          endif
          SetObjProperty( victim, "LastDamage", last_damage );
        endforeach

        victims := ListMobilesNearLocationEx( thevortex.x, thevortex.y,
                                              thevortex.z, 1,
                                              LISTEX_FLAG_NORMAL + LISTEX_FLAG_HIDDEN,
                                              thevortex.realm );
        foreach victim in victims
          if ( ( AP_GetVital( victim, HITS ) ) && ( victim.serial != caster.serial ) )
            PlayMovingEffect( thevortex, victim, 0x379f, 0xf, 0x1e );
            PlaySoundEffect( victim, 0x020b );
            ApplySpellDamageEX( victim, RandomDiceRoll( "4d6" ), DMG_ENERGY,
                                caster, info.Circle, "Chaos Maelstrom" );
          endif
        endforeach

        newx := thevortex.x + RandomInt( 2 ) - RandomInt( 2 );
        newy := thevortex.y + RandomInt( 2 ) - RandomInt( 2 );
        newz := GetWorldHeight( newx, newy );

        if ( CheckLosAt( thevortex, newx, newy, newz ) )
          PlayMovingEffectXYZ( thevortex.x, thevortex.y, thevortex.z, newx,
                               newy, newz, 0x37cc, 0xf, 0x1e, 0, thevortex.realm );
          thevortex.movable := 1;
          MoveObjectToLocation( thevortex, newx, newy, newz, thevortex.realm,
                                MOVEOBJECT_FORCELOCATION );
          thevortex.movable := 0;
        endif
      endif

    endforeach

    sleepms( 700 );
    duration -= 1;

  endwhile

  foreach thevortex in vortexlist
    DestroyItem( thevortex );
  endforeach

endprogram
